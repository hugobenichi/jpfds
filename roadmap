0.1 target
  test lflatmap
  add infinite seq constructors (continually, cycle, from supplier, ...)
  test Reducible reduce, map, filter, flatMap
  consider adding static helper class Seqs across all types (solve jruby calls)
  polish built script (run/exec, non console builds, add help)
  fully doc seq, seqbuilder,
  class-lvl doc for List
  add java run ant tasks for executing examples
  add examples for reducer and seqs
  add release note in README
  add StringReader and Tokenizer
  add IntSeq + associated Col/Reducer

0.2 target
  add Set abstraction, Sorted abstraction
  add RedBlackSet
  add Range, Indexed interface
  add SortedIntSet
  add Heap, Splay, BinaryHeap

0.3 target
  Add Fun, IntFun interface
  RedBlackTreeMap
  RedBlackIntTreeMap

0.4 target
  Vector
  HashTrieSet
  HashTrieMap

backlog
  consider hashCode ?
  consider linked arraylets for Seq
  try array wrapping vector + covariant builder (StoreException ?)
  add contract, invariant, generator based tests
  consider long variant: LongCol, LongVec, LongSeq, LongReD
  consider double variant: DoubleCol, DoubleVec, DoubleSeq, DoubleRed
  Queue data structure
  move package organization description by implementation + type into readme
    jpfs.{Vec, Seq, Set, Fun, SizeInfo, Col, Reducer, Builder}
    jpfds.seqs.{SeqBuilder, EmptySeq, List, ... } x 4 types
    jpfds.vecs.{Vector, ...} x 4 types
    jpfds.hashtries.{HashTrieSet, HashTrieMap, Vector, ... } x 2 types
    jpfds.trees.{TreeSet, TreeMap, IntTreeSet, ... } x 2 types
    jpfds.queues
    jpfds.heaps
